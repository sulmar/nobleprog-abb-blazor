@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection;
@inject LazyAssemblyLoader AssemblyLoader


<CascadingAuthenticationState>

    <Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="_lazyLoadedAssemblies"
            OnNavigateAsync="OnNavigateAsync">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>

</CascadingAuthenticationState>

@code {
    private List<Assembly> _lazyLoadedAssemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext context)
    {
        if (context.Path.StartsWith("analytics"))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "Shopper.Analytics.dll" });
            _lazyLoadedAssemblies.AddRange(assemblies);
        }
    }
}